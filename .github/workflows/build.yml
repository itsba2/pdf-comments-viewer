name: Build and Release

on:
  push:
    tags:
      - "v*"

jobs:
  build-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller
      - name: Extract version
        id: get_version
        run: |
          $version = python -c "import importlib.util; spec = importlib.util.spec_from_file_location('version', 'pdf_comment_viewer/version.py'); version = importlib.util.module_from_spec(spec); spec.loader.exec_module(version); print(version.__version__)"
          echo "Building version: $version"
          echo "version=$version" >> $env:GITHUB_ENV
      - name: Build executable
        run: |
          python bundle.py
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: PDFCommentViewer-Windows
          path: dist/PDFCommentViewer-${{ env.version }}.exe

  build-macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.9"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller
      - name: Extract version
        id: get_version
        run: |
          version=$(python -c "import importlib.util; spec = importlib.util.spec_from_file_location('version', 'pdf_comment_viewer/version.py'); version = importlib.util.module_from_spec(spec); spec.loader.exec_module(version); print(version.__version__)")
          echo "Building version: $version"
          echo "version=$version" >> $GITHUB_ENV
      - name: Build executable
        run: |
          python bundle.py
      - name: Create DMG
        run: |
          # Create directory for the app
          mkdir -p dist/dmg
          cp -R "dist/PDFCommentViewer-${{ env.version }}.app" dist/dmg/ || cp -R "dist/PDFCommentViewer-${{ env.version }}" dist/dmg/
          # Create .dmg file
          hdiutil create -volname "PDF Comment Viewer" -srcfolder dist/dmg -ov -format UDZO dist/PDFCommentViewer-${{ env.version }}.dmg
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: PDFCommentViewer-MacOS
          path: dist/PDFCommentViewer-${{ env.version }}.dmg

  build-linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.9"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller
      - name: Extract version
        id: get_version
        run: |
          version=$(python -c "import importlib.util; spec = importlib.util.spec_from_file_location('version', 'pdf_comment_viewer/version.py'); version = importlib.util.module_from_spec(spec); spec.loader.exec_module(version); print(version.__version__)")
          echo "Building version: $version"
          echo "version=$version" >> $GITHUB_ENV
      - name: Build executable
        run: |
          python bundle.py
      - name: Create tarball
        run: |
          cd dist
          tar -czvf pdf_comment_viewer-${{ env.version }}.tar.gz pdf_comment_viewer-${{ env.version }}
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: PDFCommentViewer-Linux
          path: dist/pdf_comment_viewer-${{ env.version }}.tar.gz

  create-release:
    needs: [build-windows, build-macos, build-linux]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
      - name: Extract version
        id: get_version
        run: |
          version=$(python -c "import importlib.util; spec = importlib.util.spec_from_file_location('version', 'pdf_comment_viewer/version.py'); version = importlib.util.module_from_spec(spec); spec.loader.exec_module(version); print(version.__version__)")
          echo "Building version: $version"
          echo "version=$version" >> $GITHUB_ENV
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
      - name: Display structure of downloaded files
        run: ls -R artifacts
      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          name: "PDF Comment Viewer v${{ env.version }}"
          body: |
            PDF Comment Viewer version ${{ env.version }}
            
            ## Changes in this release
            - See commit history for details
            
            ## Files
            - Windows: PDFCommentViewer-${{ env.version }}-Windows.exe
            - macOS: PDFCommentViewer-${{ env.version }}-MacOS.dmg
            - Linux: pdf_comment_viewer-${{ env.version }}-Linux.tar.gz
          draft: false
          prerelease: false
          files: |
            artifacts/PDFCommentViewer-Windows/PDFCommentViewer-${{ env.version }}.exe
            artifacts/PDFCommentViewer-MacOS/PDFCommentViewer-${{ env.version }}.dmg
            artifacts/PDFCommentViewer-Linux/pdf_comment_viewer-${{ env.version }}.tar.gz